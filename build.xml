<?xml version="1.0" encoding="UTF-8"?>
<project name="Translation tool" default="war" xmlns:ivy="antlib:org.apache.ivy.ant">

    <path id="module.compile.classpath">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="module.test.classpath">
        <path refid="module.compile.classpath"/>
        <pathelement path="output/classes" />
    </path>

    <target name="clean">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="output" includes="**/*"/>
        </delete>
        <delete dir="dist"/>
        <delete dir="lib"/>
    </target>

    <target name="war" depends="compile">
        <sequential>
            <mkdir dir="dist"/>
            <war destfile="dist/ROOT.war" webxml="web/WEB-INF/web.xml">
                <webinf dir="web/WEB-INF" />
                <fileset dir="web" includes="**" excludes="WEB-INF/**"/>
                <lib dir="lib"/>
                <classes dir="output/classes"/>
            </war>
        </sequential>
    </target>

    <macrodef name="copy-resources">
        <attribute name="src.dir" />
        <attribute name="output.dir" />
        <attribute name="excludes" default="**/*.java"/>
        <sequential>
            <copy todir="@{output.dir}" overwrite="true" preservelastmodified="false">
                <fileset dir="@{src.dir}" excludes="@{excludes}"/>
            </copy>
        </sequential>
    </macrodef>

    <target name="compile" depends="lib">
        <sequential>
            <mkdir dir="output/classes"/>
            <javac classpathref="module.compile.classpath" srcdir="src" destdir="output/classes" encoding="UTF-8" />
            <copy-resources src.dir="src" output.dir="output/classes"/>
        </sequential>
    </target>

    <target name="check.lib">
        <available file="lib" property="lib.available"/>
    </target>

    <target name="lib" depends="check.lib" unless="lib.available">
        <antcall target="resolve" />
    </target>

    <target name="compile-tests" depends="compile">
        <sequential>
            <mkdir dir="output/tests"/>
            <javac
                    srcdir="test"
                    destdir="output/tests"
                    encoding="UTF-8"
                    classpathref="module.test.classpath"/>
            <copy-resources src.dir="test" output.dir="output/tests"/>
        </sequential>
    </target>

    <target name="unittest" depends="compile-tests">
        <sequential>
            <mkdir dir="output/test-reports" />
            <junit printsummary="yes" fork="false" haltonfailure="no" haltonerror="no" maxmemory="512m"
                   reloading="no" failureproperty="tests.failed">
                <jvmarg value="-Dfile.encoding=UTF-8"/>

                <classpath location="output/classes"/>
                <classpath location="output/tests"/>
                <classpath refid="module.compile.classpath"/>

                <formatter type="xml"/>
                <batchtest haltonfailure="no" todir="output/test-reports">
                    <fileset dir="output/tests" includes="**/*UnitTest.class"/>
                </batchtest>
            </junit>
        </sequential>
    </target>

    <target name="test" depends="compile-tests">
        <sequential>
            <mkdir dir="output/test-reports" />
            <junit printsummary="yes" fork="false" haltonfailure="no" haltonerror="no" maxmemory="512m"
                   reloading="no" failureproperty="tests.failed">
                <jvmarg value="-Dfile.encoding=UTF-8"/>

                <classpath location="output/classes"/>
                <classpath location="output/tests"/>
                <classpath refid="module.compile.classpath"/>

                <formatter type="xml"/>
                <batchtest haltonfailure="no" todir="output/test-reports">
                    <fileset dir="output/tests" includes="**/*Test.class"/>
                </batchtest>
            </junit>
        </sequential>
    </target>

    <!-- Ivy stuff -->
    <property name="ivy.install.version" value="2.1.0-rc2" />
    <property name="ivy.home" value="${user.home}/.ivy" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="resolve" depends="init-ivy" description="--> retrieve dependencies with ivy">
        <ivy:retrieve conf="default,test" type="jar,orbit" pattern="lib/[conf]/[artifact].[ext]"/>
        <ivy:retrieve conf="sources" type="source" pattern="lib/[conf]/[artifact]-[type].[ext]"/>
        <ivy:retrieve conf="default" type="jar,orbit" pattern="web/WEB-INF/lib/[artifact].[ext]"/>
    </target>

    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <!-- try to load ivy here from ivy home, in case the user has not already dropped
                      it into ant's lib dir (note that the latter copy will always take precedence).
                      We will not fail as long as local lib dir exists (it may be empty) and
                      ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
</project>